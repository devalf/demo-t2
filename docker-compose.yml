version: '3.7'

services:
  client:
    container_name: client
    build:
      context: ./src/client
      dockerfile: Dockerfile
    image: devalf/client
    ports:
      - '8080:80'
    volumes:
      - ./src/client:/usr/src/client-app
      - /usr/src/client-app/node_modules

  server:
    container_name: server
    build:
      context: ./src/server
      dockerfile: Dockerfile
    image: devalf/server
    ports:
      - '8081:8081'
    volumes:
      - ./src/server:/usr/src/server-app
      - /usr/src/server-app/node_modules
    depends_on:
      - mongo-db
    links:
      - mongo-db
    environment:
      - NODE_ENV=production
      - MONGODB_URL=mongodb://mongo-db:27017/demo-t2
      - MONGO_DB_USERNAME=${DB_USERNAME}
      - MONGO_DB_PASSWORD=${DB_PASSWORD}

  mongo-db:
    container_name: mongo_db
    image: mongo:4.2
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MONGO_DB_USERNAME: ${DB_USERNAME}
      MONGO_DB_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    ports:
      - 27017:27017
    volumes:
      - ./src/mongo-db/data/db:/data/db
      - ./src/mongo-db/scripts/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
      - ./src/mongo-db/scripts/products.js:/docker-entrypoint-initdb.d/products.js
